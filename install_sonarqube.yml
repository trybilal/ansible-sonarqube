---
- hosts: all
  become: true
  vars:
    sonarqube_password: your_strong_password  # **REPLACE THIS WITH A STRONG PASSWORD**

  tasks:
    - name: Update package lists
      apt: update_cache=yes

    - name: Install Java and PostgreSQL
      apt: name={{ item }} state=present
      loop:
        - openjdk-17-jdk  # Or the required Java version
        - postgresql
        - postgresql-contrib

    - name: Create SonarQube database and user
      postgresql_user:
        user: sonar
        password: "{{ sonarqube_password }}"
        privileges: ALL
      postgresql_db:
        name: sonar
        owner: sonar

    - name: Download SonarQube (manual download required)
      debug:
        msg: "Please download SonarQube from https://www.sonarqube.org/downloads/ and place the ZIP file in /tmp/"

    - name: Check if SonarQube zip file exists
      stat:
        path: /tmp/sonarqube-*.zip
      register: sonarqube_zip

    - fail_when: not sonarqube_zip.stat.exists
      msg: "SonarQube ZIP file not found in /tmp/. Please download it and place it there."

    - name: Move and extract SonarQube
      unarchive:
        src: /tmp/sonarqube-*.zip
        dest: /opt
        remote_src: yes
        creates: /opt/sonarqube

    - name: Create symbolic link for SonarQube directory
      file:
        src: "{{ lookup('pipe', 'ls -d /opt/sonarqube-*') }}"
        dest: /opt/sonarqube
        state: link

    - name: Create SonarQube user and set ownership
      user:
        name: sonarqube
        system: yes
        create_home: no
        shell: /bin/false
      file: # Ownership change is now within the same task
        path: /opt/sonarqube
        owner: sonarqube
        group: sonarqube
        recurse: yes

    - name: Configure SonarQube
      blockinfile: # Using blockinfile for cleaner multi-line configuration
        path: /opt/sonarqube/conf/sonar.properties
        create: yes
        block: |
          sonar.jdbc.username=sonar
          sonar.jdbc.password={{ sonarqube_password }}
          sonar.jdbc.url=jdbc:postgresql://localhost/sonar

    - name: Create systemd service file
      blockinfile: # Using blockinfile for cleaner multi-line configuration
        path: /etc/systemd/system/sonarqube.service
        create: yes
        block: |
          [Unit]
          Description=SonarQube service
          After=syslog.target network.target

          [Service]
          Type=forking
          ExecStart=/opt/sonarqube/bin/linux-x86-64/sonar.sh start
          ExecStop=/opt/sonarqube/bin/linux-x86-64/sonar.sh stop
          User=sonarqube
          Group=sonarqube
          Restart=always
          LimitNOFILE=65536
          LimitNPROC=4096

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon, start and enable SonarQube
      systemd:
        daemon_reload: yes
        name: sonarqube
        state: started
        enabled: yes

    - name: Set file descriptor and virtual memory limits
      blockinfile:
        path: /etc/security/limits.conf
        create: yes
        block: |
          sonarqube - nofile 65536
          sonarqube - nproc 4096
      sysctl:
        name: vm.max_map_count
        value: 262144
        state: present

    - name: Allow firewall traffic on port 9000 and enable UFW
      ufw:
        rule: allow
        port: 9000
      command: ufw enable # Enable UFW in the same task

    - name: Print SonarQube access information
      debug:
        msg: "SonarQube installation complete. Access it at http://{{ ansible_host }}:9000"