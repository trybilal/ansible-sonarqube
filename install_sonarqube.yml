---
- hosts: localhost
  become: true
  vars:
    sonarqube_password: "StrongPassword123"  # ðŸ”¹ Replace with your actual password
    sonarqube_version: "10.2.1.28906"  # ðŸ”¹ Replace with the correct SonarQube version
    sonarqube_zip_url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
    db_name: "sonarqube"
    db_user: "sonar"
    sonarqube_home: "/opt/sonarqube"

  tasks:
    - name: Update package lists
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - openjdk-17-jdk  # SonarQube requires Java 17
          - unzip
          - wget
          - curl
          - tar
          - zip
          - net-tools
          - postgresql
          - postgresql-contrib
        state: present

    - name: Ensure PostgreSQL is running
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Create SonarQube PostgreSQL user
      become_user: postgres
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ sonarqube_password }}"
        role_attr_flags: CREATEDB,NOSUPERUSER

    - name: Create SonarQube database
      become_user: postgres
      postgresql_db:
        name: "{{ db_name }}"
        owner: "{{ db_user }}"

    - name: Download SonarQube
      get_url:
        url: "{{ sonarqube_zip_url }}"
        dest: "/tmp/sonarqube.zip"

    - name: Extract SonarQube
      unarchive:
        src: "/tmp/sonarqube.zip"
        dest: /opt/
        remote_src: yes
        extra_opts: [--strip-components=1]
      notify: Restart SonarQube

    - name: Create SonarQube user
      user:
        name: sonarqube
        system: yes
        create_home: no
        shell: /bin/false

    - name: Set ownership and permissions for SonarQube
      file:
        path: "{{ sonarqube_home }}"
        owner: sonarqube
        group: sonarqube
        recurse: yes

    - name: Configure SonarQube (sonar.properties)
      blockinfile:
        path: "{{ sonarqube_home }}/conf/sonar.properties"
        create: yes
        block: |
          sonar.jdbc.username={{ db_user }}
          sonar.jdbc.password={{ sonarqube_password }}
          sonar.jdbc.url=jdbc:postgresql://localhost/{{ db_name }}

    - name: Create systemd service file for SonarQube
      copy:
        dest: /etc/systemd/system/sonarqube.service
        content: |
          [Unit]
          Description=SonarQube service
          After=network.target postgresql.service

          [Service]
          Type=simple
          User=sonarqube
          Group=sonarqube
          ExecStart={{ sonarqube_home }}/bin/linux-x86-64/sonar.sh start
          ExecStop={{ sonarqube_home }}/bin/linux-x86-64/sonar.sh stop
          Restart=always
          LimitNOFILE=65536

          [Install]
          WantedBy=multi-user.target
      notify: Restart SonarQube

    - name: Reload systemd and enable SonarQube
      systemd:
        daemon_reload: yes
        name: sonarqube
        enabled: yes
        state: started

    - name: Set file descriptor limits for SonarQube
      blockinfile:
        path: /etc/security/limits.conf
        create: yes
        block: |
          sonarqube - nofile 65536
          sonarqube - nproc 4096

    - name: Increase virtual memory limit for SonarQube
      sysctl:
        name: vm.max_map_count
        value: 262144
        state: present

    - name: Allow traffic on port 9000 (SonarQube)
      ufw:
        rule: allow
        port: 9000
        proto: tcp

    - name: Print SonarQube access information
      debug:
        msg: "ðŸŽ‰ SonarQube is installed! Access it at http://{{ ansible_host | default('localhost') }}:9000"

  handlers:
    - name: Restart SonarQube
      systemd:
        name: sonarqube
        state: restarted
